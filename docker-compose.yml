services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: >
      sh -c "python manage.py migrate --noinput && gunicorn ${DJANGO_WSGI_MODULE}:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --access-logfile - --error-logfile - --log-level debug"
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - ./db.sqlite3:/app/db.sqlite3   # harmless if you keep a sqlite file around, not used for Postgres
    restart: unless-stopped
    networks: [appnet]



  worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: celery -A ${CELERY_APP} worker -l info --concurrency=2
    depends_on:
      - redis
    restart: unless-stopped
    networks: [appnet]

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: celery -A ${CELERY_APP} beat -l info
    depends_on:
      - redis
    restart: unless-stopped
    networks: [appnet]

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    restart: unless-stopped
    networks: [appnet]

volumes:
  redis-data:

networks:
  appnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
